# 🔄 pewPewCLI Sync Configuration
# This file defines sync operations for various purposes.
# Each sync operation has a unique key and defines input/output paths and transformations.

# 📑 Raycast Snippets Sync
raycast:
  # 📂 Input Configuration
  input_folders:
    - "/Users/codaveto/Documents/repos/tools/pew/documentations"
    - "/Users/codaveto/Documents/repos/tools/pew/prompts"

  # 📋 Content Filtering
  allowed_subfolders:
    - "*"     # Allow all subfolders
  allowed_files:
    - "*.md"     # Only process markdown files
  # 📤 Output Configuration
  output_folders:
    - "/Users/codaveto/Library/Application Support/Raycast/snippets"     # Your actual Raycast snippets folder
  # 🔧 Options
  keep_folder_structure: false     # Flatten all snippets into a single directory
  # 🔄 Transformations
  transform:
    # Your script gets the entire config as JSON:
    # {
    #   "input_folders": ["path/to/input1", "path/to/input2"],
    #   "allowed_subfolders": ["*"],
    #   "allowed_files": ["*.md"],
    #   "output_folders": ["path/to/output"],
    #   "keep_folder_structure": false
    # }
    script:
      command: "python3"     # Command to run the script (optional, runs directly if not specified)
      path: "scripts/raycast_transform.py"     # Path to the transform script
    # If script is empty/null, use these settings for built-in transforms:
    sync:
      # Control which parts of the paths/content to transform
      replace_file_names: false     # Replace strings in file names
      replace_folder_names: false     # Replace strings in folder paths
      replace_file_content: true     # Replace strings in file contents
      # Text replacements to apply (in order)
      # Only applied to the parts enabled above
      replacements:
        - from: "old text"
          to: "new text"

  # 📝 Description
  description: "Syncs markdown files to Raycast snippets, converting each file into a snippet with the filename as the keyword."

# 📑 Test Sync
test:
  # 📂 Input Configuration
  input_folders:
    - "documentations"
    - "prompts"

  # 📋 Content Filtering
  allowed_subfolders:
    - "examples"
    - "templates"
  allowed_files:
    - "*.md"
    - "*.txt"

  # 📤 Output Configuration
  output_folders:
    - "test_output"

  # 🔧 Options
  keep_folder_structure: true

  # 🔄 Transformations
  transform:
    script:
      command: "go run"     # Example using Go
      path: "./scripts/test_transform.go"
